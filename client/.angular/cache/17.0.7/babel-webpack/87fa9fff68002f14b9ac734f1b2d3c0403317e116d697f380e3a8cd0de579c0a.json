{"ast":null,"code":"import { AuthService } from '../../../services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../pipes/form-control-status.pipe\";\nimport * as i6 from \"../../../pipes/form-group.status.pipe\";\nfunction SignUpComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Invalid value\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Invalid value\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nexport let SignUpComponent = /*#__PURE__*/(() => {\n  class SignUpComponent {\n    get firstNameInput() {\n      return this.signUpForm.get('firstName');\n    }\n    get lastNameInput() {\n      return this.signUpForm.get('lastName');\n    }\n    get emailInput() {\n      return this.signUpForm.get('email');\n    }\n    get passwordInput() {\n      return this.signUpForm.get('password');\n    }\n    get errorMessage() {\n      let msg = \"\";\n      if (this.reqError) {\n        msg = this.reqError;\n      } else if (this.firstNameInput.errors && this.firstNameInput.errors.required) {\n        msg = \"First Name is a required field\";\n      } else if (this.firstNameInput.errors && this.firstNameInput.errors.minlength) {\n        msg = \"First Name is too short\";\n      } else if (this.firstNameInput.errors && this.firstNameInput.errors.maxlength) {\n        msg = \"First Name is too long\";\n      } else if (this.lastNameInput.errors && this.lastNameInput.errors.required) {\n        msg = \"Last Name is a required field\";\n      } else if (this.lastNameInput.errors && this.lastNameInput.errors.minlength) {\n        msg = \"Last Name is too short\";\n      } else if (this.lastNameInput.errors && this.lastNameInput.errors.maxlength) {\n        msg = \"Last Name is too long\";\n      } else if (this.emailInput.errors && this.emailInput.errors.required) {\n        msg = \"Email is a required field\";\n      } else if (this.emailInput.errors && this.emailInput.errors.email) {\n        msg = \"Email is invalid\";\n      } else if (this.passwordInput.errors && this.passwordInput.errors.required) {\n        msg = \"Password is a required field\";\n      } else if (this.passwordInput.errors && this.passwordInput.errors.minlength) {\n        msg = \"Password is too short\";\n      }\n      return msg;\n    }\n    constructor(_authService, _router) {\n      this._authService = _authService;\n      this._router = _router;\n      this.signUpForm = new FormGroup({\n        'firstName': new FormControl(\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(32)]),\n        'lastName': new FormControl(\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(32)]),\n        'email': new FormControl(\"\", [Validators.required, Validators.email]),\n        'password': new FormControl(\"\", [Validators.required, Validators.minLength(8)])\n      });\n      this.loading = false;\n      this.signUpFailed = false;\n      this.reqError = \"\";\n    }\n    signUp() {\n      this.loading = true;\n      this.signUpFailed = false;\n      this.reqError = \"\";\n      if (this.signUpForm.valid) {\n        let user = {\n          firstName: this.firstNameInput.value,\n          lastName: this.lastNameInput.value,\n          email: this.emailInput.value,\n          password: this.passwordInput.value\n        };\n        return this._authService.signUp(user).then(() => {\n          this.loading = false;\n          this._router.navigate([\"home\"]);\n        }).catch(err => {\n          if (err.status == 400) {\n            this.reqError = err.error.indexOf(\"already exists\") >= 0 ? err.error : \"Oops something went wrong\";\n          } else {\n            this.reqError = \"Oops! Something went wrong\";\n          }\n          this.signUpFailed = true;\n        });\n      }\n    }\n    static #_ = this.ɵfac = function SignUpComponent_Factory(t) {\n      return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignUpComponent,\n      selectors: [[\"sign-up\"]],\n      decls: 30,\n      vars: 16,\n      consts: [[1, \"col-12\"], [1, \"card\"], [1, \"card-header\", \"card-header-primary\"], [1, \"card-body\"], [3, \"submit\"], [1, \"row\"], [1, \"col-6\"], [1, \"form-group\", \"bmd-form-group\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"First Name\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [1, \"form-group\", \"bmd-form-group\"], [\"type\", \"text\", \"placeholder\", \"Last Name\", 1, \"form-control\", 3, \"formControl\"], [\"type\", \"email\", \"placeholder\", \"Email Address\", 1, \"form-control\", 3, \"formControl\"], [\"class\", \"form-control-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-control-feedback\"], [1, \"alert\", \"alert-danger\"]],\n      template: function SignUpComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtext(3, \"Sign Up\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n          i0.ɵɵlistener(\"submit\", function SignUpComponent_Template_form_submit_5_listener() {\n            return ctx.signUp();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n          i0.ɵɵpipe(9, \"formGroupStatus\");\n          i0.ɵɵelement(10, \"input\", 8);\n          i0.ɵɵpipe(11, \"formControlStatus\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 6)(13, \"div\", 9);\n          i0.ɵɵelement(14, \"input\", 10);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 5)(16, \"div\", 0)(17, \"div\", 9);\n          i0.ɵɵelement(18, \"input\", 11);\n          i0.ɵɵtemplate(19, SignUpComponent_span_19_Template, 2, 0, \"span\", 12);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(20, \"div\", 5)(21, \"div\", 0)(22, \"div\", 9);\n          i0.ɵɵelement(23, \"input\", 13);\n          i0.ɵɵpipe(24, \"formControlStatus\");\n          i0.ɵɵtemplate(25, SignUpComponent_span_25_Template, 2, 0, \"span\", 12);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(26, \"div\", 9)(27, \"button\", 14);\n          i0.ɵɵtext(28, \"Sign Up\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(29, SignUpComponent_div_29_Template, 2, 1, \"div\", 15);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpipeBind1(9, 10, ctx.firstNameInput));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formControl\", ctx.firstNameInput)(\"ngClass\", i0.ɵɵpipeBind1(11, 12, ctx.firstNameInput));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formControl\", ctx.lastNameInput);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formControl\", ctx.emailInput);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.emailInput.touched && ctx.emailInput.invalid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formControl\", ctx.passwordInput)(\"ngClass\", i0.ɵɵpipeBind1(24, 14, ctx.passwordInput));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.passwordInput.touched && ctx.passwordInput.invalid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.signUpFailed || ctx.signUpForm.dirty && ctx.signUpForm.invalid);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgForm, i4.FormControlDirective, i5.FormControlStatusPipe, i6.FormGroupStatusPipe]\n    });\n  }\n  return SignUpComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}