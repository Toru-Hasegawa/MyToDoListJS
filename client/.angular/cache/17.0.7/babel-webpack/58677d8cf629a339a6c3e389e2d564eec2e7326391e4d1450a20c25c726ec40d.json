{"ast":null,"code":"import { ToDosViewModel } from '../../../view-models/todos.view-model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../view-models/todos.view-model\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateToDoComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function CreateToDoComponent_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleEditMode());\n    });\n    i0.ɵɵelementStart(1, \"h4\", 4);\n    i0.ɵɵtext(2, \"Add To-Do\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵelement(4, \"i\", 5);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateToDoComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 6);\n    i0.ɵɵlistener(\"submit\", function CreateToDoComponent_div_2_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.save());\n    });\n    i0.ɵɵelementStart(2, \"div\", 7)(3, \"div\", 8)(4, \"div\", 9);\n    i0.ɵɵelement(5, \"input\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 11)(7, \"div\", 9);\n    i0.ɵɵelement(8, \"input\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 13)(10, \"button\", 14);\n    i0.ɵɵelement(11, \"i\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function CreateToDoComponent_div_2_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editMode = false);\n    });\n    i0.ɵɵelement(13, \"i\", 16);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.titleInput);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.bodyInput);\n  }\n}\nexport let CreateToDoComponent = /*#__PURE__*/(() => {\n  class CreateToDoComponent {\n    get titleInput() {\n      return this.todoForm.get('title');\n    }\n    get bodyInput() {\n      return this.todoForm.get('body');\n    }\n    constructor(todosVm) {\n      this.todosVm = todosVm;\n      this.editMode = false;\n      this.todoForm = new FormGroup({\n        'title': new FormControl(\"\", [Validators.required, Validators.maxLength(255)]),\n        'body': new FormControl(\"\", [Validators.required])\n      });\n    }\n    toggleEditMode() {\n      this.editMode = !this.editMode;\n    }\n    save() {\n      if (this.todoForm.valid) {\n        this.todosVm.newTodo.title = this.titleInput.value;\n        this.todosVm.newTodo.body = this.bodyInput.value;\n        this.todosVm.newTodo.isCompleted = false;\n        this.todosVm.create().then(() => {\n          this.titleInput.setValue(\"\");\n          this.bodyInput.setValue(\"\");\n          this.editMode = false;\n        });\n      }\n    }\n    static #_ = this.ɵfac = function CreateToDoComponent_Factory(t) {\n      return new (t || CreateToDoComponent)(i0.ɵɵdirectiveInject(i1.ToDosViewModel));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateToDoComponent,\n      selectors: [[\"create-todo\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[1, \"list-group-item\"], [\"class\", \"d-flex justify-content-between list-group-new-item\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"d-flex\", \"justify-content-between\", \"list-group-new-item\", 3, \"click\"], [1, \"add-to-do\"], [1, \"fas\", \"fa-plus\"], [3, \"submit\"], [1, \"row\"], [1, \"col-5\"], [1, \"form-group\", \"bmd-form-group\"], [\"type\", \"text\", \"placeholder\", \"Title\", 1, \"form-control\", 3, \"formControl\"], [1, \"col-6\"], [\"type\", \"text\", \"placeholder\", \"Body\", 1, \"form-control\", 3, \"formControl\"], [1, \"col-1\", \"d-flex\", \"justify-content-between\"], [1, \"icon-btn\"], [1, \"icon-btn\", 3, \"click\"], [1, \"fas\", \"fa-times\"]],\n      template: function CreateToDoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"li\", 0);\n          i0.ɵɵtemplate(1, CreateToDoComponent_div_1_Template, 5, 0, \"div\", 1)(2, CreateToDoComponent_div_2_Template, 14, 2, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.editMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgForm, i3.FormControlDirective],\n      styles: [\".fa-plus[_ngcontent-%COMP%], .fa-times[_ngcontent-%COMP%]{color:#9c27b0}.list-group-new-item[_ngcontent-%COMP%]{cursor:pointer}form[_ngcontent-%COMP%]{margin-bottom:0!important}.add-to-do[_ngcontent-%COMP%]{color:#9c27b0}\"]\n    });\n  }\n  return CreateToDoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}