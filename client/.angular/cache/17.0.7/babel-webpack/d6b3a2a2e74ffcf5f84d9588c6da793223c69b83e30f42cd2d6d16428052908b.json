{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(_authService, _router) {\n      this._authService = _authService;\n      this._router = _router;\n      this.publicRoutes = ['', 'sign-up'];\n    }\n    inPublicRoute(path) {\n      return this.publicRoutes.indexOf(path) >= 0;\n    }\n    canActivate(route, state) {\n      return this._authService.accessToken$.pipe(map(accessToken => {\n        if (accessToken) {\n          if (this.inPublicRoute(route.routeConfig.path)) {\n            this._router.navigate(['home']);\n          }\n          return true;\n        } else {\n          if (!this.inPublicRoute(route.routeConfig.path)) {\n            this._router.navigate(['']);\n            return false;\n          } else {\n            return true;\n          }\n        }\n      }));\n    }\n    static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac\n    });\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}